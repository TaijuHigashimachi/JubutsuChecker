<p class="my-5 fs-2 text-center">確認の結果...</p>
<% if @cursed_items %>
  <p class="fs-1 text-center text-danger">次の呪物の可能性が<br />検知されました</p>
  <div class="text-center mb-5">
    <canvas id="canvas"></canvas>
  </div>
  <%= render @cursed_items %>
  <div class="mt-5">
    <%= form_with url: result_path do |f| %>
      <div class="form-group text-center">
      <label class="btn">
        <% if request.smart_phone? %>
          <%= f.file_field :upload_image, onchange: 'previewImage()', accept: 'image/*', capture: 'camera', class: 'form-control' %>1．写真を撮影する
        <% else %>
          <%= f.file_field :upload_image, onchange: 'previewImage()', accept: 'image/*', class: 'form-control' %>1．写真を選択する
        <% end %>
      </label>
    </div>
      <div class="form-group text-center">
        <%= f.submit 'もう一度確認', class: 'btn btn-danger mt-3' %>
      </div>
      <div class="text-center">
        <%= image_tag '', id: 'preview', class: 'profile-image mt-3', width: '300' %>
      </div>
    <% end %>
  </div>
  <div class="mt-3 text-center">
    <%= link_to "https://twitter.com/share?url=https://jubutsuchecker.herokuapp.com/&text=次の呪物を検出しました%0a#{ @cursed_item_array.map { |a| "【#{a}】" }.join('%0a')  }%0a&hashtags=呪物確認,呪術廻戦", title: 'Twitter', target: '_blank' do %>
      <button name="button" class="btn btn-twitter"><i class="fab fa-twitter me-1"></i>Twitterで結果をシェア</button>
    <% end %>
  </div>
<% else %>
  <p class="fs-1 mt-3 text-center">安心してください<br />呪物はありませんでした</p>
  <div class="mt-5">
    <%= form_with url: result_path do |f| %>
      <div class="form-group text-center">
      <label class="btn">
        <% if request.smart_phone? %>
          <%= f.file_field :upload_image, onchange: 'previewImage()', accept: 'image/*', capture: 'camera', class: 'form-control' %>1．写真を撮影する
        <% else %>
          <%= f.file_field :upload_image, onchange: 'previewImage()', accept: 'image/*', class: 'form-control' %>1．写真を選択する
        <% end %>
      </label>
    </div>
      <div class="form-group text-center">
        <%= f.submit 'もう一度確認', class: 'btn btn-danger mt-3' %>
      </div>
      <div class="text-center">
        <%= image_tag '', id: 'preview', class: 'profile-image mt-3', width: '300' %>
      </div>
    <% end %>
  </div>
  <p class="mt-5 text-center">呪物がなかなか見つからないときは<br /><%= link_to '呪物一覧', index_path, class: 'text-decoration-underline' %>を参考にして<br />撮影するモノを変えてみてください</p>
<% end %>

<script>
  // アップロード写真のプレビュー
  function previewImage() {
    const target = this.event.target;
  const file = target.files[0];
  const reader  = new FileReader();
  reader.onloadend = function () {
    const preview = document.querySelector("#preview")
      if(preview) {
        preview.src = reader.result;
      }
    }
    if (file) {
      reader.readAsDataURL(file);
    }
  }

  // アップロード画像に四角い枠を描画
  <% if @cursed_item_annotations.present? %>
    window.onload = function() {
      var img = new Image();
      var data = "data:image/jpeg;base64,<%= @encoded_image %>";
      img.src = data;
      img.onload = function(){
        // canvas要素と、グラフィックを描くための2Dオブジェクトを生成
        var canvas = document.querySelector("#canvas");
        var ctx = canvas.getContext("2d");

        // アップされた画像のアスペクト比を計算し、canvasサイズの高さを合わせる
        var aspectRatio = img.naturalHeight / img.naturalWidth;
        canvas.width = 300;
        canvas.height = 300 * aspectRatio;

        // 縮尺の比率を計算
        var scaleRatio = canvas.width / img.naturalWidth;

        // canvas要素にimgオブジェクトの内容をコピー
        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);

        // 描画内容の設定
        ctx.lineWidth = 3;
        ctx.strokeStyle = "rgb(190, 54, 75)";
        ctx.beginPath();
        ctx.moveTo(
          <%= @cursed_item_annotations[0]["boundingPoly"]["normalizedVertices"][0]["x"] ||= 0 %> * 1000  * scaleRatio,
          <%= @cursed_item_annotations[0]["boundingPoly"]["normalizedVertices"][0]["y"] ||= 0 %> * 1000  * scaleRatio); // 左上
        ctx.lineTo(
          <%= @cursed_item_annotations[0]["boundingPoly"]["normalizedVertices"][1]["x"] ||= canvas.width / 1000 %> * 1000 * scaleRatio,
          <%= @cursed_item_annotations[0]["boundingPoly"]["normalizedVertices"][1]["y"] ||= 0 %> * 1000  * scaleRatio);  // 右上
        ctx.lineTo(
          <%= @cursed_item_annotations[0]["boundingPoly"]["normalizedVertices"][2]["x"] ||= canvas.width / 1000 %> * 1000 * scaleRatio,
          <%= @cursed_item_annotations[0]["boundingPoly"]["normalizedVertices"][2]["y"] ||= canvas.height / 1000 %> * 1000 * scaleRatio);   // 右下
        ctx.lineTo(
          <%= @cursed_item_annotations[0]["boundingPoly"]["normalizedVertices"][3]["x"] ||= 0 %> * 1000 * scaleRatio,
          <%= @cursed_item_annotations[0]["boundingPoly"]["normalizedVertices"][3]["y"] ||= canvas.height / 1000 %> * 1000 * scaleRatio);  // 左下
        ctx.closePath();                  // 描いた線を閉じる
        ctx.stroke();                     // 描いた図形を線で表示させる

        <%  if @cursed_item_annotations[1] %>
          ctx.beginPath();
          ctx.moveTo(
            <%= @cursed_item_annotations[1]["boundingPoly"]["normalizedVertices"][0]["x"] %> * 1000  * scaleRatio,
            <%= @cursed_item_annotations[1]["boundingPoly"]["normalizedVertices"][0]["y"] %> * 1000  * scaleRatio);
          ctx.lineTo(
            <%= @cursed_item_annotations[1]["boundingPoly"]["normalizedVertices"][1]["x"] %> * 1000  * scaleRatio,
            <%= @cursed_item_annotations[1]["boundingPoly"]["normalizedVertices"][1]["y"] %> * 1000  * scaleRatio);
          ctx.lineTo(
            <%= @cursed_item_annotations[1]["boundingPoly"]["normalizedVertices"][2]["x"] %> * 1000  * scaleRatio,
            <%= @cursed_item_annotations[1]["boundingPoly"]["normalizedVertices"][2]["y"] %> * 1000  * scaleRatio);
          ctx.lineTo(
            <%= @cursed_item_annotations[1]["boundingPoly"]["normalizedVertices"][3]["x"] %> * 1000  * scaleRatio,
            <%= @cursed_item_annotations[1]["boundingPoly"]["normalizedVertices"][3]["y"] %> * 1000  * scaleRatio);
          ctx.closePath();
          ctx.stroke();
        <% end %>

        <%  if @cursed_item_annotations[2] %>
          ctx.beginPath();
          ctx.moveTo(
            <%= @cursed_item_annotations[2]["boundingPoly"]["normalizedVertices"][0]["x"] %> * 1000  * scaleRatio,
            <%= @cursed_item_annotations[2]["boundingPoly"]["normalizedVertices"][0]["y"] %> * 1000  * scaleRatio);
          ctx.lineTo(
            <%= @cursed_item_annotations[2]["boundingPoly"]["normalizedVertices"][1]["x"] %> * 1000  * scaleRatio,
            <%= @cursed_item_annotations[2]["boundingPoly"]["normalizedVertices"][1]["y"] %> * 1000  * scaleRatio);
          ctx.lineTo(
            <%= @cursed_item_annotations[2]["boundingPoly"]["normalizedVertices"][2]["x"] %> * 1000  * scaleRatio,
            <%= @cursed_item_annotations[2]["boundingPoly"]["normalizedVertices"][2]["y"] %> * 1000  * scaleRatio);
          ctx.lineTo(
            <%= @cursed_item_annotations[2]["boundingPoly"]["normalizedVertices"][3]["x"] %> * 1000  * scaleRatio,
            <%= @cursed_item_annotations[2]["boundingPoly"]["normalizedVertices"][3]["y"] %> * 1000  * scaleRatio);
          ctx.closePath();
          ctx.stroke();
        <% end %>
      };
    };
  <% end %>
</script>